"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _
from django.contrib import messages

from dotenv import load_dotenv

load_dotenv()


BASE_DIR = Path(__file__).resolve().parent.parent


SECRET_KEY = 'django-insecure-rfa*l3)ze--b!)$38^1y3_f98_45jsar4b!4+p7ckjmlg!ry%j'


DEBUG = True

ALLOWED_HOSTS = []


INSTALLED_APPS = [
    'unfold',
    'unfold.contrib.filters',
    'unfold.contrib.forms',
    'unfold.contrib.import_export',
    'import_export',
    'django.contrib.admin',
    'django.contrib.humanize',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core.apps.CoreConfig',
    'system.apps.SystemsConfig',
    # 'debug_toolbar',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
]

INTERNAL_IPS = [
    # ...
    '127.0.0.1'
    # ...
]


DEBUG_TOOLBAR_CONFIG = {
    'SHOW_TOOLBAR_CALLBACK': lambda request: True
}

ROOT_URLCONF = 'church.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Add the templates directory path here
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'church.wsgi.application'


DATABASES = {
    'default': {
        'ENGINE': os.environ.get("DB_ENGINE"),
        "HOST": os.environ.get("DB_HOST"),
        "NAME": os.environ.get("DB_NAME"),
        "USER": os.environ.get("DB_USER"),
        "PASSWORD": os.environ.get("DB_PASS"),
    }
}


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


LANGUAGE_CODE = 'en-us'

TIME_ZONE = "Africa/Accra"
USE_I18N = True

USE_TZ = True

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

PASSWORD_HASHERS = [
    "django.contrib.auth.hashers.ScryptPasswordHasher",
    "django.contrib.auth.hashers.PBKDF2PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher",
    "django.contrib.auth.hashers.Argon2PasswordHasher",
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
]

AUTH_USER_MODEL = "core.User"


MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

LOGGING = {
    'version': 1,
    'disable_existing_lodggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler'
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'general.log',
            'formatter': 'verbose'
        }
    },
    'loggers': {
        '': {
            'handlers': ['console', 'file'],
            'level': os.environ.get('DJANGO_LOG_LEVEL', 'INFO')
        }
    },
    'formatters': {
        'verbose': {
            'format': '{asctime} ({levelname}) - {name} - {message}',
            'style': '{'
        }
    }
}

UNFOLD = {
    "SITE_TITLE": 'CMS',
    "SITE_HEADER": 'CMS',
    "SITE_URL": "/",
    "SITE_SYMBOL": "manage_accounts",
    "LOGIN": {
        "image": lambda r: static("sample/login-bg.jpg"),
    },
    "STYLES": [
        lambda request: static("css/style.css"),
    ],
    "SCRIPTS": [
        lambda request: static("js/script.js"),
    ],
    "COLORS": {
        "primary": {
        "50": "232 233 255",
        "100": "200 204 255",
        "200": "157 167 250",
        "300": "109 123 235",
        "400": "68 81 221",
        "500": "32 58 206",
        "600": "16 39 188",
        "700": "10 28 150",
        "800": "8 20 112",
        "900": "6 16 86"
    }

    },
    # "SIDEBAR": {
    #     "show_search": True,  # Search in applications and models names
    #     "show_all_applications": False,  # Dropdown with all applications and models
    #     "navigation": [
    #         {
    #             "separator": True,  # Top border
    #             "items": [
    #                 {
    #                     "title": _("Dashboard"),
    #                     "icon": "dashboard",  # Supported icon set: https://fonts.google.com/icons
    #                     "link": reverse_lazy("admin:index"),
    #                 },
    #             ],
    #         },
    #         {
    #             "separator": True,
    #             "items":[
    #                 {
    #                     "title": _("Users"),
    #                     "icon": "shield_person",
    #                     "link": reverse_lazy("admin:core_user_changelist"),
    #                 },
    #                 {
    #                     "title": _("Groups"),
    #                     "icon": "group_add",
    #                     "link": reverse_lazy("admin:auth_group_changelist"),
    #                 }
    #             ]
    #         },
    #         {
    #             "separator": True,
    #             "items":[
    #                 {
    #                     "title": _("Members"),
    #                     "icon": "diversity_2",
    #                     "link": reverse_lazy("admin:system_member_changelist"),
    #                 },
    #                 {
    #                     "title": _("Ministry"),
    #                     "icon": "group",
    #                     "link": reverse_lazy("admin:system_ministry_changelist"),
    #                 },
    #             ]
    #         },
    #         {
    #             "separator": True,
    #             "items":[
    #                 {
    #                     "title": _("Account Balance"),
    #                     "icon": "account_balance",
    #                     "link": reverse_lazy("admin:system_account_changelist"),
    #                 },
    #                 {
    #                     "title": _("Income"),
    #                     "icon": "credit_card",
    #                     "link": reverse_lazy("admin:system_income_changelist"),
    #                 },
    #                 {
    #                     "title": _("Expenditure"),
    #                     "icon": "paid",
    #                     "link": reverse_lazy("admin:system_expenditure_changelist"),
    #                 },
    #                 {
    #                     "title": _("Tithe"),
    #                     "icon": "savings",
    #                     "link": reverse_lazy("admin:system_tithe_changelist"),
    #                 },
    #             ]
    #         },
    #     ],
    # },
}
